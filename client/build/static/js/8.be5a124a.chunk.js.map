{"version":3,"sources":["components/Button.js","components/Portal.js","components/Overlay.js","components/Modal/Modal.js","components/Modal/ModalContent.js","components/Modal/ModalFooter.js","components/Modal/index.js","utils/sagas.js","components/ChooseName.js","styles.js","components/Separator.js"],"names":["ButtonStyle","styled","button","alignItems","backgroundColor","colors","dodgerBlue","border","borderRadius","color","white","display","flexShrink","fontSize","fontWeight","justifyContent","margin","outline","padding","tappable","textDecoration","webkitAppearance","mozAppearance","Button","children","onClick","portalWithScrollPreventionClass","removeAllClasses","node","Array","from","classList","forEach","c","remove","setClassList","classValues","add","InnerPortal","state","portalNode","document","body","this","rootScrollingElement","getElementById","props","isOpen","addPortalNode","prevProps","removePortalNode","updatePortalNode","createElement","appendChild","setState","preventScrollClass","portalClass","removeChild","onClose","querySelectorAll","length","ReactDOM","createPortal","React","Component","styles","position","zIndex","overflow","Portal","hasScrollPrevention","css","exitAnimationDuration","overlay","height","top","right","bottom","left","animationName","keyframes","animationDuration","animationFillMode","animationTimingFunction","overlayExit","Overlay","animateClose","root","createRef","ref","Boolean","event","target","current","isScrollingDown","startY","curY","isScrollingUp","boxEnterKeyframes","boxExitKeyframes","box","animation","willChange","boxShadow","WebkitTapHighlightColor","boxExit","scrollingContainer","overflowY","width","boxSizing","WebkitOverflowScrolling","Modal","handleCloseButtonClick","handleOverlayClick","closeOnOverlayTap","handleKeyDown","stopPropagation","keyCode","preventDefault","handleTouchStart","touches","clientY","handleTouchMove","scrollHeight","clientHeight","scrollTop","scrollToTop","scrollableElement","scrollTo","behavior","focus","onTouchStart","onTouchMove","tabIndex","onKeyDown","id","maxWidth","defaultProps","Root","div","flexDirection","ModalContent","isCentered","textAlign","ModalFooter","Fragment","Separator","size","minWidth","ModalPortal","modal","openModal","closeModal","window","setTimeout","onExitAnimationEnd","handleNewMessage","params","takeEvery","types","action","author","username","socket","send","JSON","stringify","Title","cloudBurst","Subtitle","Input","input","athensGray","ChooseName","useState","setIsOpen","setUsername","value","onChange","e","placeholder","setupSocket","store","dispatch","sagaMiddleware","run","honorNight","sail","iceCold","dairyCream","cupid","grayChateau","shuttleGray","black","cursor","userSelect","WebkitTouchCallout","breakpoints","laptop","grow","flexGrow"],"mappings":"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","file":"static/js/8.be5a124a.chunk.js","sourcesContent":["// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { colors, tappable } from 'src/styles';\n\nconst ButtonStyle = styled.button<{}>({\n  alignItems: 'center',\n  backgroundColor: colors.dodgerBlue,\n  border: 'none',\n  borderRadius: 8,\n  color: colors.white,\n  display: 'flex',\n  flexShrink: 0,\n  fontSize: 16,\n  fontWeight: 600,\n  justifyContent: 'center',\n  margin: 0,\n  outline: 'none',\n  padding: 16,\n  ...tappable,\n  textDecoration: 'none',\n  webkitAppearance: 'none',\n  mozAppearance: 'none',\n});\n\ntype Props = {|\n  children: React$Node,\n  onClick: () => void,\n|};\n\nconst Button = ({ children, onClick }: Props) => {\n  return <ButtonStyle onClick={onClick}>{children}</ButtonStyle>;\n};\n\nexport default Button;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { ClassNames } from '@emotion/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\ntype ClassName = string;\n\n// Some of the components that use Portal require scroll prevention\n// when open (Modal, Flyout, MainMenu). It is also possible for a few of them\n// to be open at the same time (e.g. Modal inside Flyout or nested Modals).\n// Therefore we should be careful not to remove scroll prevention until\n// all of the components that require scroll prevent unmount - we keep track\n// of these by adding `portalWithScrollPreventionClass` to their corresponding\n// nodes and checking if any of them is present in the DOM.\n// TODO: a better solution is needed for handling the scroll prevention logic,\n// possibly the one that:\n// * isolates the scroll prevention logic from InnerPortal\n// * is represented by a single boolean in the app state\n// * avoids using DOM for checks\nconst portalWithScrollPreventionClass = 'portal-with-scroll-prevention-f2e1bc';\n\nconst removeAllClasses = (node: HTMLElement) => {\n  // IE11 doesn't support the variadic version of .remove() so we have to\n  // manually call it once for each class in the list.\n  Array.from(node.classList).forEach((c) => {\n    node.classList.remove(c);\n  });\n};\n\n// Sets the classes on node to be exactly equal to the provided class values.\n// This makes it easy for us to have our class list be a pure function of the\n// passed classes, which is important for interacting nicely with React.\nconst setClassList = (node: HTMLElement, ...classValues: Array<ClassName>) => {\n  removeAllClasses(node);\n  // IE11 doesn't support the variadic version of .add() so we have to\n  // manually call it once for each class in the list.\n  classValues.forEach((c) => {\n    node.classList.add(c);\n  });\n};\n\ntype Props = {\n  isOpen: boolean,\n  onClose?: () => void,\n  children?: React$Node,\n  portalClass: ClassName,\n  preventScrollClass: ?ClassName,\n};\n\ntype State = {\n  portalNode: ?HTMLDivElement,\n};\n\nclass InnerPortal extends React.Component<Props, State> {\n  rootScrollingElement: ?HTMLElement;\n\n  state = {\n    portalNode: null,\n  };\n\n  componentDidMount() {\n    if (document.body == null) return; // flow refinement\n    this.rootScrollingElement = document.getElementById('root');\n\n    if (this.props.isOpen) {\n      this.addPortalNode();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!prevProps.isOpen && this.props.isOpen) this.addPortalNode();\n    else if (prevProps.isOpen && !this.props.isOpen) this.removePortalNode();\n    else this.updatePortalNode();\n  }\n\n  componentWillUnmount() {\n    // TODO check whether we will try to remove the DOM node before React has\n    // been able to clean up its shit due to the render diff. It sounds like\n    // we may need to cleanup on a subsequent tick.\n    if (this.props.isOpen && this.state.portalNode != null) {\n      this.removePortalNode();\n    }\n  }\n\n  addPortalNode() {\n    const portalNode = document.createElement('div');\n    if (document.body != null) document.body.appendChild(portalNode);\n    this.setState({ portalNode });\n    this.updatePortalNode();\n  }\n\n  updatePortalNode() {\n    if (this.state.portalNode == null) return;\n    setClassList(\n      this.state.portalNode,\n      ...(this.props.preventScrollClass != null\n        ? [portalWithScrollPreventionClass]\n        : []),\n      this.props.portalClass,\n    );\n    if (this.props.preventScrollClass != null) {\n      this.rootScrollingElement?.classList.add(this.props.preventScrollClass);\n    }\n  }\n\n  removePortalNode() {\n    if (document.body != null && this.state.portalNode != null)\n      document.body.removeChild(this.state.portalNode);\n    this.setState({ portalNode: null }, () => {\n      if (this.props.onClose != null) this.props.onClose();\n    });\n    if (\n      this.props.preventScrollClass != null &&\n      document.querySelectorAll(`.${portalWithScrollPreventionClass}`)\n        .length === 0\n    ) {\n      this.rootScrollingElement?.classList.remove(\n        this.props.preventScrollClass,\n      );\n    }\n  }\n\n  render() {\n    return this.props.isOpen &&\n      this.state.portalNode &&\n      this.props.children != null\n      ? ReactDOM.createPortal(this.props.children, this.state.portalNode)\n      : null;\n  }\n}\n\nconst styles = {\n  portal: {\n    position: 'absolute',\n    zIndex: 2147483647, // Necessary to beat Intercom widget.\n  },\n  preventScroll: {\n    overflow: 'hidden',\n  },\n};\n\nexport default function Portal({\n  hasScrollPrevention = false,\n  isOpen,\n  children,\n}: {\n  hasScrollPrevention?: boolean,\n  isOpen: boolean,\n  children: React$Node,\n}) {\n  return (\n    <ClassNames>\n      {({ css }) => (\n        <InnerPortal\n          isOpen={isOpen}\n          portalClass={css(styles.portal)}\n          preventScrollClass={\n            hasScrollPrevention ? css(styles.preventScroll) : null\n          }\n        >\n          {children}\n        </InnerPortal>\n      )}\n    </ClassNames>\n  );\n}\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { keyframes } from '@emotion/react';\nimport React, { createRef } from 'react';\n\nimport { type ReactRefType } from 'src/utils/flow';\n\ntype Props = {\n  animateClose?: boolean,\n  children?: React$Node,\n  onClick?: () => void,\n};\n\nexport const exitAnimationDuration = 300; // milliseconds\n\nconst overlayEnterKeyframes = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst overlayExitKeyframes = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`;\n\nconst styles = {\n  overlay: {\n    height: '100vh',\n    position: 'fixed',\n    zIndex: 1,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    animationName: overlayEnterKeyframes,\n    animationDuration: '300ms',\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n  },\n  overlayExit: {\n    animationName: overlayExitKeyframes,\n    animationDuration: `${exitAnimationDuration}ms`,\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n  },\n};\n\nconst Overlay = ({ animateClose, children, onClick }: Props) => {\n  // ref to node\n  const root: ReactRefType<HTMLDivElement> = createRef();\n  return (\n    <div\n      ref={root}\n      css={[styles.overlay, Boolean(animateClose) && styles.overlayExit]}\n      onClick={(event) => {\n        if (event.target === root.current && onClick) onClick();\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Overlay;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { keyframes } from '@emotion/react';\nimport React, { createRef, Component } from 'react';\n\nimport type { DefaultProps, Props } from 'src/components/Modal';\nimport Overlay, { exitAnimationDuration } from 'src/components/Overlay';\nimport { colors } from 'src/styles';\nimport { type ReactRefType } from 'src/utils/flow';\n\nexport { exitAnimationDuration };\n\nconst isScrollingDown = (startY, curY) => curY < startY;\nconst isScrollingUp = (startY, curY) => !isScrollingDown(startY, curY);\n\nconst MODAL_MAX_WIDTH = 600;\nconst MODAL_BORDER_RADIUS = 16;\n\nconst boxEnterKeyframes = keyframes`\n  0% {\n    opacity: 0;\n    transform: scale(1);\n  }\n\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nconst boxExitKeyframes = keyframes`\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  100% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n`;\n\nconst styles = {\n  box: {\n    // https://codepen.io/amonks/pen/GjjdoA\n    // to fix Safari it is also necessary to unset `will-change` rule\n    ':-webkit-full-screen-ancestor': {\n      animation: 'none',\n      animationFillMode: 'none',\n      willChange: 'unset',\n    },\n    backgroundColor: colors.white,\n    borderRadius: MODAL_BORDER_RADIUS,\n    boxShadow: '0 0 24px rgba(0, 0, 0, 0.18)',\n    margin: 'auto',\n    animationName: boxEnterKeyframes,\n    animationDuration: '300ms',\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n    padding: 40,\n    overflow: 'hidden',\n    // Promote to own compositor layer. Allows boxShadow to extend outside its\n    // parent clipping rect. Without this the boxShadow will appear clipped\n    // during the rubber-band scroll effect in iOS Safari.\n    willChange: 'transform',\n    WebkitTapHighlightColor: 'rgba(0,0,0,0)',\n  },\n  boxExit: {\n    animationName: boxExitKeyframes,\n    animationDuration: `${exitAnimationDuration}ms`,\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n  },\n  scrollingContainer: {\n    overflowY: 'auto',\n    padding: 32,\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box',\n    WebkitOverflowScrolling: 'touch', // momentum scrolling for iOS Safari\n    display: 'flex',\n    alignItems: 'flex-start',\n    ':focus': {\n      outline: 'none',\n    },\n  },\n};\n\nclass Modal extends Component<Props, void> {\n  static defaultProps: DefaultProps;\n\n  handleCloseButtonClick: () => void;\n  handleOverlayClick: () => void;\n  handleKeyDown: (event: KeyboardEvent) => void;\n  handleTouchStartOnScrollingContainer: () => void;\n  handleTouchStart: (event: SyntheticTouchEvent<>) => void;\n  handleTouchMove: (event: SyntheticTouchEvent<>) => void;\n\n  startY: ?number;\n\n  componentDidMount() {\n    if (this.scrollingContainer.current != null) {\n      this.scrollingContainer.current.focus();\n    }\n  }\n\n  scrollingContainer: ReactRefType<HTMLDivElement> = createRef();\n\n  handleCloseButtonClick = () => {\n    this.props.onClose();\n  };\n\n  handleOverlayClick = () => {\n    if (this.props.closeOnOverlayTap) {\n      this.props.onClose();\n    }\n  };\n\n  handleKeyDown = (event: KeyboardEvent) => {\n    // Try to make sure the keydown events are not propagated to elements up on the tree when a modal is open, because we should treat the modal as an indipendent layer of the application and keydown events should not interact with the underlying content.\n    // This is achieved giving programmatically focus to the scrolling container in cDM\n    // If other elements steal focus this intent would fail, but it's the safest approach we could keep at the moment\n    event.stopPropagation();\n    if (event.keyCode === 27) {\n      // Esc\n      event.preventDefault();\n      this.props.onClose();\n    }\n  };\n\n  handleTouchStart = (event: SyntheticTouchEvent<>) => {\n    this.startY = event.touches[0].clientY;\n  };\n\n  handleTouchMove = (event: SyntheticTouchEvent<>) => {\n    if (this.scrollingContainer.current == null) return;\n\n    const curY = event.touches[0].clientY;\n\n    // Disable scroll propagation when container isn't scrollable\n    if (\n      this.scrollingContainer.current.scrollHeight ===\n      this.scrollingContainer.current.clientHeight\n    ) {\n      event.preventDefault();\n      return;\n    }\n\n    // Disable scroll propagation when we are scrolled to the top of the container\n    // and we are trying to scroll up further.\n    if (\n      this.scrollingContainer.current.scrollTop === 0 &&\n      isScrollingUp(this.startY, curY)\n    ) {\n      event.preventDefault();\n      return;\n    }\n\n    // FlowIssue — This second check is only required because Flow is\n    // pessimistic about side effects.\n    if (this.scrollingContainer.current == null) return;\n\n    // Disable scroll propagation when we are scrolled to the bottom of the container\n    // and we are trying to scroll down further.\n    if (\n      this.scrollingContainer.current.scrollTop +\n        this.scrollingContainer.current.clientHeight >=\n        this.scrollingContainer.current.scrollHeight &&\n      isScrollingDown(this.startY, curY)\n    ) {\n      event.preventDefault();\n      return;\n    }\n  };\n\n  scrollToTop = () => {\n    const scrollableElement = this.scrollingContainer.current;\n    if (scrollableElement != null) {\n      // $FlowIssue flow is unaware of the scrollTo method on elements\n      scrollableElement.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  render() {\n    return (\n      <Overlay animateClose={this.props.animateClose}>\n        <div\n          css={styles.scrollingContainer}\n          ref={this.scrollingContainer}\n          onClick={this.handleOverlayClick}\n          onTouchStart={this.handleTouchStart}\n          onTouchMove={this.handleTouchMove}\n          tabIndex=\"0\"\n          onKeyDown={this.handleKeyDown}\n        >\n          <div\n            id=\"modal\"\n            css={[\n              styles.box,\n              Boolean(this.props.animateClose) && styles.boxExit,\n              {\n                width: this.props.width || MODAL_MAX_WIDTH,\n                maxWidth: this.props.width || MODAL_MAX_WIDTH,\n              },\n            ]}\n            onClick={(event) => event.stopPropagation()}\n          >\n            {this.props.children}\n          </div>\n        </div>\n      </Overlay>\n    );\n  }\n}\n\nModal.defaultProps = {\n  closeOnOverlayTap: false,\n};\n\nexport default Modal;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nconst Root = styled.div<{}>({\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nexport default function ModalContent({\n  children,\n  isCentered,\n}: {|\n  children: React$Node,\n  isCentered?: boolean,\n|}) {\n  return (\n    <Root css={isCentered ? { alignItems: 'center', textAlign: 'center' } : {}}>\n      {children}\n    </Root>\n  );\n}\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport React from 'react';\n\nimport Separator from 'src/components/Separator';\n\nexport function ModalFooter({\n  children,\n  isCentered = false,\n}: {|\n  children: React$Node,\n  isCentered?: boolean,\n|}) {\n  return (\n    <React.Fragment>\n      <Separator size={32} />\n      <div\n        css={{\n          display: 'flex',\n          justifyContent: isCentered ? 'center' : 'flex-start',\n\n          '> a, > button': {\n            minWidth: 164,\n          },\n        }}\n      >\n        {children}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ModalFooter;\n","// @flow\nimport React, { createRef, Component } from 'react';\nimport type { Node } from 'react';\n\nimport Portal from 'src/components/Portal';\nimport { type ReactRefType } from 'src/utils/flow';\n\nimport Modal, { exitAnimationDuration } from './Modal';\n\nexport type Props = {\n  isOpen: boolean,\n  title?: string,\n  onClose: Function,\n  animateClose?: boolean,\n  width?: number,\n  closeOnOverlayTap: boolean, // Close modal if user taps/clicks the overlay?\n  children: Node,\n  onExitAnimationEnd?: () => void,\n};\n\nexport type DefaultProps = {\n  closeOnOverlayTap: boolean,\n};\n\ntype State = {\n  animateClose: boolean,\n  isOpen: boolean,\n};\n\nclass ModalPortal extends Component<Props, State> {\n  static defaultProps: DefaultProps;\n\n  openModal: () => void;\n  closeModal: () => void;\n  reenablePageScroll: () => void;\n\n  state = {\n    isOpen: false,\n    animateClose: false,\n  };\n\n  componentDidMount() {\n    if (this.props.isOpen) {\n      this.openModal();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.isOpen && !prevProps.isOpen) this.openModal();\n    else if (!this.props.isOpen && prevProps.isOpen) this.closeModal();\n  }\n\n  modal: ReactRefType<Modal> = createRef();\n\n  scrollToTop = () => {\n    const modal = this.modal.current;\n    if (modal != null) {\n      modal.scrollToTop();\n    }\n  };\n\n  openModal = () => {\n    this.setState((state) => ({ ...state, isOpen: true }));\n  };\n\n  closeModal = () => {\n    this.setState((state) => ({ ...state, animateClose: true }));\n    window.setTimeout(() => {\n      this.setState((state) => ({\n        ...state,\n        animateClose: false,\n        isOpen: false,\n      }));\n\n      if (this.props.onExitAnimationEnd) this.props.onExitAnimationEnd();\n    }, exitAnimationDuration);\n  };\n\n  render() {\n    return (\n      <Portal isOpen={this.state.isOpen} hasScrollPrevention>\n        <Modal\n          {...this.props}\n          animateClose={this.state.animateClose}\n          ref={this.modal}\n        />\n      </Portal>\n    );\n  }\n}\nModalPortal.defaultProps = {\n  closeOnOverlayTap: true,\n};\n\nexport default ModalPortal;\nexport { default as ModalContent } from './ModalContent';\nexport { default as ModalFooter } from './ModalFooter';\n","// @flow\nimport { takeEvery } from 'redux-saga/effects';\n\nimport * as types from 'src/reducers/constants';\nimport type { UserName } from 'src/reducers/types';\n\nconst handleNewMessage = function* handleNewMessage(params: {\n  socket: typeof WebSocket,\n  username: UserName,\n}): any {\n  yield takeEvery(types.ADD_MESSAGE, (action) => {\n    action.author = params.username;\n    // $FlowFixMe the flow-typed library doesn't know about the methods of sockets\n    params.socket.send(JSON.stringify(action));\n  });\n};\n\nexport default handleNewMessage;\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport Button from 'src/components/Button';\nimport Modal, { ModalContent, ModalFooter } from 'src/components/Modal';\nimport Separator from 'src/components/Separator';\nimport { colors } from 'src/styles';\nimport handleNewMessage from 'src/utils/sagas';\nimport { sagaMiddleware, setupSocket, store } from 'src/utils/sockets';\n\nconst Title = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 24,\n  fontWeight: 600,\n});\n\nconst Subtitle = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 16,\n});\n\nconst Input = styled.input<{}>({\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  padding: 12,\n  backgroundColor: colors.athensGray,\n  border: 'none',\n  borderRadius: 8,\n  textAlign: 'center',\n});\n\nconst ChooseName = () => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const [username, setUsername] = React.useState('');\n\n  const handleSubmit = () => {\n    if (username !== '') {\n      setIsOpen(false);\n      const socket = setupSocket(store.dispatch, username);\n      sagaMiddleware.run(handleNewMessage, { socket, username });\n    }\n  };\n\n  return (\n    // The only way to close this modal is to submit a name\n    <Modal isOpen={isOpen} onClose={() => {}} closeOnOverlayTap={false}>\n      <ModalContent isCentered>\n        <Title>Welcome!</Title>\n        <Separator size={24} />\n        <Subtitle>What&apos;s your name?</Subtitle>\n        <Separator size={20} />\n        <Input\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Enter your name here\"\n        />\n      </ModalContent>\n      <ModalFooter isCentered>\n        <Button onClick={handleSubmit}>Submit</Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default ChooseName;\n","// @flow\nexport const colors = {\n  // Primary Colors\n  dodgerBlue: '#3B80FE',\n  cloudBurst: '#21374D',\n  honorNight: '#0C2426',\n\n  // Palette\n  sail: '#B7D8F9',\n  iceCold: '#B7F9D8',\n  dairyCream: '#F9D8B7',\n  cupid: '#F9B7D8',\n\n  // Greys\n  athensGray: '#E7E7EF',\n  grayChateau: '#A2AAB3',\n  shuttleGray: '#616470',\n\n  // Other\n  white: '#FFF',\n  black: '#000000',\n};\n\n// It doesn't fix all the possible issues on all browsers or devices, feel free to add rules\nexport const tappable = {\n  cursor: 'pointer',\n  userSelect: 'none', // to prevent the text selection (e.g. selecting text triggers the copy-paste popup menu on iOS and Android)\n  WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)', // to prevent the default tap highlight colour being applied\n  WebkitTouchCallout: 'none', // to prevent the context menu from showing, at least on iOS for anchor elements\n};\n\nexport const breakpoints = {\n  laptop: 1024,\n};\n","// @flow\nimport styled from '@emotion/styled';\n\nconst Separator = styled.div<{ grow?: boolean, size: number }>((props) => ({\n  flexShrink: 0,\n  height: props.size,\n  width: props.size,\n  ...(props.grow ? { flexGrow: 1 } : {}),\n}));\n\nexport default Separator;\n"],"sourceRoot":""}