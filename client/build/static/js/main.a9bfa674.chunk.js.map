{"version":3,"sources":["reducers/constants.js","reducers/messages.js","reducers/user.js","reducers/users.js","reducers/index.js","reducers/actions.js","utils/sockets.js","styles.js","components/Button.js","components/Portal.js","components/Overlay.js","components/Modal/Modal.js","components/Modal/ModalContent.js","components/Separator.js","components/Modal/ModalFooter.js","components/Modal/index.js","utils/sagas.js","components/ChooseName.js","components/Media.js","components/AutoTextArea.js","static/assets/send.svg","components/AddMessage.js","components/MessagesList.js","views/Desktop/components/Sidebar.js","views/Desktop/index.js","static/assets/logo.svg","views/TouchDevice/Header.js","views/TouchDevice/index.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_MESSAGE","MESSAGE_RECEIVED","ADD_USER","USERS_LIST","messages","state","action","type","types","message","author","id","user","users","chat","combineReducers","nextMessageId","setupSocket","dispatch","username","process","NODE_ENV","WEBSOCKET_DEV_PORT","HOST","location","origin","replace","socket","WebSocket","onopen","send","JSON","stringify","name","onmessage","event","data","parse","String","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","colors","tappable","cursor","userSelect","WebkitTapHighlightColor","WebkitTouchCallout","breakpoints","ButtonStyle","styled","button","alignItems","backgroundColor","border","borderRadius","color","display","flexShrink","fontSize","fontWeight","justifyContent","margin","outline","padding","textDecoration","webkitAppearance","mozAppearance","Button","children","onClick","portalWithScrollPreventionClass","removeAllClasses","node","Array","from","classList","forEach","c","remove","setClassList","classValues","add","InnerPortal","portalNode","document","body","this","rootScrollingElement","getElementById","props","isOpen","addPortalNode","prevProps","removePortalNode","updatePortalNode","createElement","appendChild","setState","preventScrollClass","portalClass","removeChild","onClose","querySelectorAll","length","ReactDOM","createPortal","React","Component","styles","position","zIndex","overflow","Portal","hasScrollPrevention","css","exitAnimationDuration","overlay","height","top","right","bottom","left","animationName","keyframes","animationDuration","animationFillMode","animationTimingFunction","overlayExit","Overlay","animateClose","root","createRef","ref","Boolean","target","current","isScrollingDown","startY","curY","isScrollingUp","boxEnterKeyframes","boxExitKeyframes","box","animation","willChange","boxShadow","boxExit","scrollingContainer","overflowY","width","boxSizing","WebkitOverflowScrolling","Modal","handleCloseButtonClick","handleOverlayClick","closeOnOverlayTap","handleKeyDown","stopPropagation","keyCode","preventDefault","handleTouchStart","touches","clientY","handleTouchMove","scrollHeight","clientHeight","scrollTop","scrollToTop","scrollableElement","scrollTo","behavior","focus","onTouchStart","onTouchMove","tabIndex","onKeyDown","maxWidth","defaultProps","Root","div","flexDirection","ModalContent","isCentered","textAlign","Separator","size","grow","flexGrow","ModalFooter","Fragment","minWidth","ModalPortal","modal","openModal","closeModal","window","setTimeout","onExitAnimationEnd","handleNewMessage","params","takeEvery","Title","Subtitle","Input","input","ChooseName","useState","setIsOpen","setUsername","value","onChange","e","placeholder","run","Media","hasMounted","matches","handleMediaQueryChange","mql","matchMedia","query","addListener","removeListener","Parent","maxHeight","transition","TextArea","textarea","resize","AutoTextArea","textAreaRef","text","onKeyPress","textAreaHeight","setTextAreaHeight","parentHeight","setParentHeight","useEffect","rows","style","SendIcon","img","AddMessageContainer","connect","addMessage","useRef","setMessage","handleSendMessage","trim","key","src","sendIcon","alt","borderBottom","MessageContainer","User","Message","MessagesListContainer","map","idx","prevMessage","groupMessages","isAuthor","borderRight","UsersList","SidebarContainer","u","Messages","Desktop","Logo","Info","HeaderContainer","logo","paddingTop","TouchDevice","App","isDesktopView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","render"],"mappings":"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","file":"static/js/main.a9bfa674.chunk.js","sourcesContent":["// @flow\nconst ADD_MESSAGE = 'ADD_MESSAGE';\nconst MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\nconst ADD_USER = 'ADD_USER';\nconst USERS_LIST = 'USERS_LIST';\n\nexport { ADD_MESSAGE, MESSAGE_RECEIVED, ADD_USER, USERS_LIST };\n","// @flow\nimport * as types from './constants';\nimport type { MessageAction, MessageData } from './types';\n\nconst messages = (state: Array<MessageData> = [], action: MessageAction) => {\n  switch (action.type) {\n    case types.ADD_MESSAGE:\n    case types.MESSAGE_RECEIVED:\n      return [\n        ...state,\n        { message: action.message, author: action.author, id: action.id },\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default messages;\n","// @flow\nimport * as types from './constants';\nimport type { UserAction, FullUser } from './types';\n\nconst user = (state: ?FullUser = null, action: UserAction) => {\n  switch (action.type) {\n    case types.ADD_USER:\n      return action.user;\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","// @flow\nimport * as types from './constants';\nimport type { UserListAction, Users } from './types';\n\nconst users = (state: Users = [], action: UserListAction) => {\n  switch (action.type) {\n    case types.USERS_LIST:\n      return action.users;\n    default:\n      return state;\n  }\n};\n\nexport default users;\n","// @flow\nimport { combineReducers } from 'redux';\n\nimport messages from './messages';\nimport user from './user';\nimport users from './users';\n\nconst chat = combineReducers({\n  messages,\n  users,\n  user,\n});\n\nexport default chat;\n","// @flow\nimport * as types from './constants';\nimport type {\n  MessageAction,\n  Message,\n  FullUser,\n  UserAction,\n  UserListAction,\n  User,\n  Users,\n} from './types';\n\nlet nextMessageId = 0;\n\nexport const addMessage = (\n  message: Message,\n  author: FullUser,\n): MessageAction => ({\n  type: types.ADD_MESSAGE,\n  id: nextMessageId++,\n  message,\n  author,\n});\n\nexport const messageReceived = (\n  message: Message,\n  author: FullUser,\n): MessageAction => ({\n  type: types.MESSAGE_RECEIVED,\n  id: nextMessageId++,\n  message,\n  author,\n});\n\nexport const populateUsersList = (users: Users): UserListAction => ({\n  type: types.USERS_LIST,\n  users,\n});\n\nexport const addUser = (user: User): UserAction => ({\n  type: types.ADD_USER,\n  user,\n});\n","// @flow\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from 'src/reducers';\nimport {\n  addUser,\n  messageReceived,\n  populateUsersList,\n} from 'src/reducers/actions';\nimport * as types from 'src/reducers/constants';\nimport type {\n  MessageAction,\n  UserAction,\n  UserListAction,\n  UserName,\n} from 'src/reducers/types';\n\nconst setupSocket = (\n  dispatch: (MessageAction | UserListAction | UserAction) => void,\n  username: UserName,\n) => {\n  const { NODE_ENV = 'production', WEBSOCKET_DEV_PORT = 8989 } = process.env;\n  const HOST = location.origin.replace(/^http/, 'ws');\n\n  // If in development mode, hook up to local websocket running on separate server.\n  // Otherwise, use current port\n  const socket = new WebSocket(\n    NODE_ENV === 'production' ? HOST : `ws://localhost:${WEBSOCKET_DEV_PORT}`,\n  );\n\n  socket.onopen = () => {\n    socket.send(\n      JSON.stringify({\n        type: types.ADD_USER,\n        name: username,\n      }),\n    );\n  };\n\n  socket.onmessage = (event: MessageEvent) => {\n    const data = JSON.parse(String(event.data));\n    switch (data.type) {\n      case types.ADD_MESSAGE:\n        dispatch(messageReceived(data.message, data.author));\n        break;\n      case types.USERS_LIST:\n        dispatch(populateUsersList(data.users));\n        break;\n      case types.ADD_USER:\n        dispatch(addUser(data.user));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return socket;\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\nexport { sagaMiddleware, setupSocket, store };\n","// @flow\nexport const colors = {\n  // Primary Colors\n  dodgerBlue: '#3B80FE',\n  cloudBurst: '#21374D',\n  honorNight: '#0C2426',\n\n  // Palette\n  sail: '#B7D8F9',\n  iceCold: '#B7F9D8',\n  dairyCream: '#F9D8B7',\n  cupid: '#F9B7D8',\n\n  // Greys\n  athensGray: '#E7E7EF',\n  grayChateau: '#A2AAB3',\n  shuttleGray: '#616470',\n\n  // Other\n  white: '#FFF',\n  black: '#000000',\n};\n\n// It doesn't fix all the possible issues on all browsers or devices, feel free to add rules\nexport const tappable = {\n  cursor: 'pointer',\n  userSelect: 'none', // to prevent the text selection (e.g. selecting text triggers the copy-paste popup menu on iOS and Android)\n  WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)', // to prevent the default tap highlight colour being applied\n  WebkitTouchCallout: 'none', // to prevent the context menu from showing, at least on iOS for anchor elements\n};\n\nexport const breakpoints = {\n  tablet: 768,\n};\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { colors, tappable } from 'src/styles';\n\nconst ButtonStyle = styled.button<{}>({\n  alignItems: 'center',\n  backgroundColor: colors.dodgerBlue,\n  border: 'none',\n  borderRadius: 8,\n  color: colors.white,\n  display: 'flex',\n  flexShrink: 0,\n  fontSize: 16,\n  fontWeight: 600,\n  justifyContent: 'center',\n  margin: 0,\n  outline: 'none',\n  padding: 16,\n  ...tappable,\n  textDecoration: 'none',\n  webkitAppearance: 'none',\n  mozAppearance: 'none',\n});\n\ntype Props = {|\n  children: React$Node,\n  onClick: () => void,\n|};\n\nconst Button = ({ children, onClick }: Props) => {\n  return <ButtonStyle onClick={onClick}>{children}</ButtonStyle>;\n};\n\nexport default Button;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { ClassNames } from '@emotion/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\ntype ClassName = string;\n\n// Some of the components that use Portal require scroll prevention\n// when open (Modal, Flyout, MainMenu). It is also possible for a few of them\n// to be open at the same time (e.g. Modal inside Flyout or nested Modals).\n// Therefore we should be careful not to remove scroll prevention until\n// all of the components that require scroll prevent unmount - we keep track\n// of these by adding `portalWithScrollPreventionClass` to their corresponding\n// nodes and checking if any of them is present in the DOM.\n// TODO: a better solution is needed for handling the scroll prevention logic,\n// possibly the one that:\n// * isolates the scroll prevention logic from InnerPortal\n// * is represented by a single boolean in the app state\n// * avoids using DOM for checks\nconst portalWithScrollPreventionClass = 'portal-with-scroll-prevention-f2e1bc';\n\nconst removeAllClasses = (node: HTMLElement) => {\n  // IE11 doesn't support the variadic version of .remove() so we have to\n  // manually call it once for each class in the list.\n  Array.from(node.classList).forEach((c) => {\n    node.classList.remove(c);\n  });\n};\n\n// Sets the classes on node to be exactly equal to the provided class values.\n// This makes it easy for us to have our class list be a pure function of the\n// passed classes, which is important for interacting nicely with React.\nconst setClassList = (node: HTMLElement, ...classValues: Array<ClassName>) => {\n  removeAllClasses(node);\n  // IE11 doesn't support the variadic version of .add() so we have to\n  // manually call it once for each class in the list.\n  classValues.forEach((c) => {\n    node.classList.add(c);\n  });\n};\n\ntype Props = {\n  isOpen: boolean,\n  onClose?: () => void,\n  children?: React$Node,\n  portalClass: ClassName,\n  preventScrollClass: ?ClassName,\n};\n\ntype State = {\n  portalNode: ?HTMLDivElement,\n};\n\nclass InnerPortal extends React.Component<Props, State> {\n  rootScrollingElement: ?HTMLElement;\n\n  state = {\n    portalNode: null,\n  };\n\n  componentDidMount() {\n    if (document.body == null) return; // flow refinement\n    this.rootScrollingElement = document.getElementById('root');\n\n    if (this.props.isOpen) {\n      this.addPortalNode();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!prevProps.isOpen && this.props.isOpen) this.addPortalNode();\n    else if (prevProps.isOpen && !this.props.isOpen) this.removePortalNode();\n    else this.updatePortalNode();\n  }\n\n  componentWillUnmount() {\n    // TODO check whether we will try to remove the DOM node before React has\n    // been able to clean up its shit due to the render diff. It sounds like\n    // we may need to cleanup on a subsequent tick.\n    if (this.props.isOpen && this.state.portalNode != null) {\n      this.removePortalNode();\n    }\n  }\n\n  addPortalNode() {\n    const portalNode = document.createElement('div');\n    if (document.body != null) document.body.appendChild(portalNode);\n    this.setState({ portalNode });\n    this.updatePortalNode();\n  }\n\n  updatePortalNode() {\n    if (this.state.portalNode == null) return;\n    setClassList(\n      this.state.portalNode,\n      ...(this.props.preventScrollClass != null\n        ? [portalWithScrollPreventionClass]\n        : []),\n      this.props.portalClass,\n    );\n    if (this.props.preventScrollClass != null) {\n      this.rootScrollingElement?.classList.add(this.props.preventScrollClass);\n    }\n  }\n\n  removePortalNode() {\n    if (document.body != null && this.state.portalNode != null)\n      document.body.removeChild(this.state.portalNode);\n    this.setState({ portalNode: null }, () => {\n      if (this.props.onClose != null) this.props.onClose();\n    });\n    if (\n      this.props.preventScrollClass != null &&\n      document.querySelectorAll(`.${portalWithScrollPreventionClass}`)\n        .length === 0\n    ) {\n      this.rootScrollingElement?.classList.remove(\n        this.props.preventScrollClass,\n      );\n    }\n  }\n\n  render() {\n    return this.props.isOpen &&\n      this.state.portalNode &&\n      this.props.children != null\n      ? ReactDOM.createPortal(this.props.children, this.state.portalNode)\n      : null;\n  }\n}\n\nconst styles = {\n  portal: {\n    position: 'absolute',\n    zIndex: 2147483647, // Necessary to beat Intercom widget.\n  },\n  preventScroll: {\n    overflow: 'hidden',\n  },\n};\n\nexport default function Portal({\n  hasScrollPrevention = false,\n  isOpen,\n  children,\n}: {\n  hasScrollPrevention?: boolean,\n  isOpen: boolean,\n  children: React$Node,\n}) {\n  return (\n    <ClassNames>\n      {({ css }) => (\n        <InnerPortal\n          isOpen={isOpen}\n          portalClass={css(styles.portal)}\n          preventScrollClass={\n            hasScrollPrevention ? css(styles.preventScroll) : null\n          }\n        >\n          {children}\n        </InnerPortal>\n      )}\n    </ClassNames>\n  );\n}\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { keyframes } from '@emotion/react';\nimport React, { createRef } from 'react';\n\nimport { type ReactRefType } from 'src/utils/flow';\n\ntype Props = {\n  animateClose?: boolean,\n  children?: React$Node,\n  onClick?: () => void,\n};\n\nexport const exitAnimationDuration = 300; // milliseconds\n\nconst overlayEnterKeyframes = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst overlayExitKeyframes = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`;\n\nconst styles = {\n  overlay: {\n    height: '100vh',\n    position: 'fixed',\n    zIndex: 1,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    animationName: overlayEnterKeyframes,\n    animationDuration: '300ms',\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n  },\n  overlayExit: {\n    animationName: overlayExitKeyframes,\n    animationDuration: `${exitAnimationDuration}ms`,\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n  },\n};\n\nconst Overlay = ({ animateClose, children, onClick }: Props) => {\n  // ref to node\n  const root: ReactRefType<HTMLDivElement> = createRef();\n  return (\n    <div\n      ref={root}\n      css={[styles.overlay, Boolean(animateClose) && styles.overlayExit]}\n      onClick={(event) => {\n        if (event.target === root.current && onClick) onClick();\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Overlay;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { keyframes } from '@emotion/react';\nimport React, { createRef, Component } from 'react';\n\nimport type { DefaultProps, Props } from 'src/components/Modal';\nimport Overlay, { exitAnimationDuration } from 'src/components/Overlay';\nimport { colors } from 'src/styles';\nimport { type ReactRefType } from 'src/utils/flow';\n\nexport { exitAnimationDuration };\n\nconst isScrollingDown = (startY, curY) => curY < startY;\nconst isScrollingUp = (startY, curY) => !isScrollingDown(startY, curY);\n\nconst MODAL_MAX_WIDTH = 600;\nconst MODAL_BORDER_RADIUS = 16;\n\nconst boxEnterKeyframes = keyframes`\n  0% {\n    opacity: 0;\n    transform: scale(1);\n  }\n\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nconst boxExitKeyframes = keyframes`\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  100% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n`;\n\nconst styles = {\n  box: {\n    // https://codepen.io/amonks/pen/GjjdoA\n    // to fix Safari it is also necessary to unset `will-change` rule\n    ':-webkit-full-screen-ancestor': {\n      animation: 'none',\n      animationFillMode: 'none',\n      willChange: 'unset',\n    },\n    backgroundColor: colors.white,\n    borderRadius: MODAL_BORDER_RADIUS,\n    boxShadow: '0 0 24px rgba(0, 0, 0, 0.18)',\n    margin: 'auto',\n    animationName: boxEnterKeyframes,\n    animationDuration: '300ms',\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n    padding: 40,\n    overflow: 'hidden',\n    // Promote to own compositor layer. Allows boxShadow to extend outside its\n    // parent clipping rect. Without this the boxShadow will appear clipped\n    // during the rubber-band scroll effect in iOS Safari.\n    willChange: 'transform',\n    WebkitTapHighlightColor: 'rgba(0,0,0,0)',\n  },\n  boxExit: {\n    animationName: boxExitKeyframes,\n    animationDuration: `${exitAnimationDuration}ms`,\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n  },\n  scrollingContainer: {\n    overflowY: 'auto',\n    padding: 32,\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box',\n    WebkitOverflowScrolling: 'touch', // momentum scrolling for iOS Safari\n    display: 'flex',\n    alignItems: 'flex-start',\n    ':focus': {\n      outline: 'none',\n    },\n  },\n};\n\nclass Modal extends Component<Props, void> {\n  static defaultProps: DefaultProps;\n\n  handleCloseButtonClick: () => void;\n  handleOverlayClick: () => void;\n  handleKeyDown: (event: KeyboardEvent) => void;\n  handleTouchStartOnScrollingContainer: () => void;\n  handleTouchStart: (event: SyntheticTouchEvent<>) => void;\n  handleTouchMove: (event: SyntheticTouchEvent<>) => void;\n\n  startY: ?number;\n\n  componentDidMount() {\n    if (this.scrollingContainer.current != null) {\n      this.scrollingContainer.current.focus();\n    }\n  }\n\n  scrollingContainer: ReactRefType<HTMLDivElement> = createRef();\n\n  handleCloseButtonClick = () => {\n    this.props.onClose();\n  };\n\n  handleOverlayClick = () => {\n    if (this.props.closeOnOverlayTap) {\n      this.props.onClose();\n    }\n  };\n\n  handleKeyDown = (event: KeyboardEvent) => {\n    // Try to make sure the keydown events are not propagated to elements up on the tree when a modal is open, because we should treat the modal as an indipendent layer of the application and keydown events should not interact with the underlying content.\n    // This is achieved giving programmatically focus to the scrolling container in cDM\n    // If other elements steal focus this intent would fail, but it's the safest approach we could keep at the moment\n    event.stopPropagation();\n    if (event.keyCode === 27) {\n      // Esc\n      event.preventDefault();\n      this.props.onClose();\n    }\n  };\n\n  handleTouchStart = (event: SyntheticTouchEvent<>) => {\n    this.startY = event.touches[0].clientY;\n  };\n\n  handleTouchMove = (event: SyntheticTouchEvent<>) => {\n    if (this.scrollingContainer.current == null) return;\n\n    const curY = event.touches[0].clientY;\n\n    // Disable scroll propagation when container isn't scrollable\n    if (\n      this.scrollingContainer.current.scrollHeight ===\n      this.scrollingContainer.current.clientHeight\n    ) {\n      event.preventDefault();\n      return;\n    }\n\n    // Disable scroll propagation when we are scrolled to the top of the container\n    // and we are trying to scroll up further.\n    if (\n      this.scrollingContainer.current.scrollTop === 0 &&\n      isScrollingUp(this.startY, curY)\n    ) {\n      event.preventDefault();\n      return;\n    }\n\n    // FlowIssue — This second check is only required because Flow is\n    // pessimistic about side effects.\n    if (this.scrollingContainer.current == null) return;\n\n    // Disable scroll propagation when we are scrolled to the bottom of the container\n    // and we are trying to scroll down further.\n    if (\n      this.scrollingContainer.current.scrollTop +\n        this.scrollingContainer.current.clientHeight >=\n        this.scrollingContainer.current.scrollHeight &&\n      isScrollingDown(this.startY, curY)\n    ) {\n      event.preventDefault();\n      return;\n    }\n  };\n\n  scrollToTop = () => {\n    const scrollableElement = this.scrollingContainer.current;\n    if (scrollableElement != null) {\n      // $FlowIssue flow is unaware of the scrollTo method on elements\n      scrollableElement.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  render() {\n    return (\n      <Overlay animateClose={this.props.animateClose}>\n        <div\n          css={styles.scrollingContainer}\n          ref={this.scrollingContainer}\n          onClick={this.handleOverlayClick}\n          onTouchStart={this.handleTouchStart}\n          onTouchMove={this.handleTouchMove}\n          tabIndex=\"0\"\n          onKeyDown={this.handleKeyDown}\n        >\n          <div\n            id=\"modal\"\n            css={[\n              styles.box,\n              Boolean(this.props.animateClose) && styles.boxExit,\n              {\n                width: this.props.width || MODAL_MAX_WIDTH,\n                maxWidth: this.props.width || MODAL_MAX_WIDTH,\n              },\n            ]}\n            onClick={(event) => event.stopPropagation()}\n          >\n            {this.props.children}\n          </div>\n        </div>\n      </Overlay>\n    );\n  }\n}\n\nModal.defaultProps = {\n  closeOnOverlayTap: false,\n};\n\nexport default Modal;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nconst Root = styled.div<{}>({\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nexport default function ModalContent({\n  children,\n  isCentered,\n}: {|\n  children: React$Node,\n  isCentered?: boolean,\n|}) {\n  return (\n    <Root css={isCentered ? { alignItems: 'center', textAlign: 'center' } : {}}>\n      {children}\n    </Root>\n  );\n}\n","// @flow\nimport styled from '@emotion/styled';\n\nconst Separator = styled.div<{ grow?: boolean, size: number }>((props) => ({\n  flexShrink: 0,\n  height: props.size,\n  width: props.size,\n  ...(props.grow ? { flexGrow: 1 } : {}),\n}));\n\nexport default Separator;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport React from 'react';\n\nimport Separator from 'src/components/Separator';\n\nexport function ModalFooter({\n  children,\n  isCentered = false,\n}: {|\n  children: React$Node,\n  isCentered?: boolean,\n|}) {\n  return (\n    <React.Fragment>\n      <Separator size={32} />\n      <div\n        css={{\n          display: 'flex',\n          justifyContent: isCentered ? 'center' : 'flex-start',\n\n          '> a, > button': {\n            minWidth: 164,\n          },\n        }}\n      >\n        {children}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ModalFooter;\n","// @flow\nimport React, { createRef, Component } from 'react';\nimport type { Node } from 'react';\n\nimport Portal from 'src/components/Portal';\nimport { type ReactRefType } from 'src/utils/flow';\n\nimport Modal, { exitAnimationDuration } from './Modal';\n\nexport type Props = {\n  isOpen: boolean,\n  title?: string,\n  onClose: Function,\n  animateClose?: boolean,\n  width?: number,\n  closeOnOverlayTap: boolean, // Close modal if user taps/clicks the overlay?\n  children: Node,\n  onExitAnimationEnd?: () => void,\n};\n\nexport type DefaultProps = {\n  closeOnOverlayTap: boolean,\n};\n\ntype State = {\n  animateClose: boolean,\n  isOpen: boolean,\n};\n\nclass ModalPortal extends Component<Props, State> {\n  static defaultProps: DefaultProps;\n\n  openModal: () => void;\n  closeModal: () => void;\n  reenablePageScroll: () => void;\n\n  state = {\n    isOpen: false,\n    animateClose: false,\n  };\n\n  componentDidMount() {\n    if (this.props.isOpen) {\n      this.openModal();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.isOpen && !prevProps.isOpen) this.openModal();\n    else if (!this.props.isOpen && prevProps.isOpen) this.closeModal();\n  }\n\n  modal: ReactRefType<Modal> = createRef();\n\n  scrollToTop = () => {\n    const modal = this.modal.current;\n    if (modal != null) {\n      modal.scrollToTop();\n    }\n  };\n\n  openModal = () => {\n    this.setState((state) => ({ ...state, isOpen: true }));\n  };\n\n  closeModal = () => {\n    this.setState((state) => ({ ...state, animateClose: true }));\n    window.setTimeout(() => {\n      this.setState((state) => ({\n        ...state,\n        animateClose: false,\n        isOpen: false,\n      }));\n\n      if (this.props.onExitAnimationEnd) this.props.onExitAnimationEnd();\n    }, exitAnimationDuration);\n  };\n\n  render() {\n    return (\n      <Portal isOpen={this.state.isOpen} hasScrollPrevention>\n        <Modal\n          {...this.props}\n          animateClose={this.state.animateClose}\n          ref={this.modal}\n        />\n      </Portal>\n    );\n  }\n}\nModalPortal.defaultProps = {\n  closeOnOverlayTap: true,\n};\n\nexport default ModalPortal;\nexport { default as ModalContent } from './ModalContent';\nexport { default as ModalFooter } from './ModalFooter';\n","// @flow\nimport { takeEvery } from 'redux-saga/effects';\n\nimport * as types from 'src/reducers/constants';\nimport type { UserName } from 'src/reducers/types';\n\nconst handleNewMessage = function* handleNewMessage(params: {\n  socket: typeof WebSocket,\n  username: UserName,\n}): any {\n  yield takeEvery(types.ADD_MESSAGE, (action) => {\n    action.author = params.username;\n    // $FlowFixMe the flow-typed library doesn't know about the methods of sockets\n    params.socket.send(JSON.stringify(action));\n  });\n};\n\nexport default handleNewMessage;\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport Button from 'src/components/Button';\nimport Modal, { ModalContent, ModalFooter } from 'src/components/Modal';\nimport Separator from 'src/components/Separator';\nimport { colors } from 'src/styles';\nimport handleNewMessage from 'src/utils/sagas';\nimport { sagaMiddleware, setupSocket, store } from 'src/utils/sockets';\n\nconst Title = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 24,\n  fontWeight: 600,\n});\n\nconst Subtitle = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 16,\n});\n\nconst Input = styled.input<{}>({\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  padding: 12,\n  backgroundColor: colors.athensGray,\n  border: 'none',\n  borderRadius: 8,\n  textAlign: 'center',\n});\n\nconst ChooseName = () => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const [username, setUsername] = React.useState('');\n\n  const handleSubmit = () => {\n    if (username !== '') {\n      setIsOpen(false);\n      const socket = setupSocket(store.dispatch, username);\n      sagaMiddleware.run(handleNewMessage, { socket, username });\n    }\n  };\n\n  return (\n    // The only way to close this modal is to submit a name\n    <Modal isOpen={isOpen} onClose={() => {}} closeOnOverlayTap={false}>\n      <ModalContent isCentered>\n        <Title>Welcome!</Title>\n        <Separator size={24} />\n        <Subtitle>What&apos;s your name?</Subtitle>\n        <Separator size={20} />\n        <Input\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Enter your name here\"\n        />\n      </ModalContent>\n      <ModalFooter isCentered>\n        <Button onClick={handleSubmit}>Submit</Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default ChooseName;\n","// @flow\nimport React, { type Element } from 'react';\n\ntype Props = {\n  query: string,\n  children?: (matches: boolean) => Element<*> | null,\n};\n\ntype State = {\n  hasMounted: boolean,\n  matches: boolean,\n};\n\nclass Media extends React.Component<Props, State> {\n  mql: ?MediaQueryList;\n\n  state = {\n    hasMounted: false,\n    matches: false,\n  };\n\n  componentDidMount() {\n    // Check because jsdom doesn't have matchMedia\n    if (window.matchMedia) {\n      const mql = (this.mql = window.matchMedia(this.props.query));\n      mql.addListener(this.handleMediaQueryChange);\n      this.setState(() => ({ matches: mql.matches }));\n    }\n\n    this.setState(() => ({ hasMounted: true }));\n  }\n\n  componentWillUnmount() {\n    if (this.mql == null) return;\n    this.mql.removeListener(this.handleMediaQueryChange);\n  }\n\n  handleMediaQueryChange = () => {\n    if (this.mql == null) return;\n    this.setState({ matches: this.mql.matches });\n  };\n\n  render() {\n    if (!this.props.children || !this.state.hasMounted) return null;\n    return this.props.children(this.state.matches);\n  }\n}\n\nexport default Media;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { colors } from 'src/styles';\nimport type { ReactRefType } from 'src/utils/flow';\n\n/*\n  Inspired by the following approach\n  https://medium.com/@lucasalgus/creating-a-custom-auto-resize-textarea-component-for-your-react-web-application-6959c0ad68bc\n*/\n\nconst MAX_HEIGHT = 90;\n\nconst Parent = styled.div<{}>({\n  maxHeight: MAX_HEIGHT,\n  width: '100%',\n  transition: 'height 0.25s ease',\n});\n\nconst TextArea = styled.textarea<{}>({\n  maxHeight: MAX_HEIGHT,\n  width: '100%',\n  outline: 'none',\n  padding: 12,\n  display: 'block',\n  resize: 'none',\n  backgroundColor: colors.athensGray,\n  border: 'none',\n  borderRadius: 20,\n  transition: 'height 0.25s ease',\n});\n\ntype Props = {|\n  textAreaRef: ReactRefType<HTMLTextAreaElement>,\n  placeholder: string,\n  text: string,\n  onChange: (string) => void,\n  onKeyPress: (SyntheticKeyboardEvent<EventTarget>) => void,\n|};\n\nconst AutoTextArea = ({\n  textAreaRef,\n  placeholder,\n  text,\n  onChange,\n  onKeyPress,\n}: Props) => {\n  const [textAreaHeight, setTextAreaHeight] = React.useState('auto');\n  const [parentHeight, setParentHeight] = React.useState('auto');\n\n  React.useEffect(() => {\n    if (textAreaRef.current != null) {\n      const { scrollHeight } = textAreaRef.current;\n      if (text === '') {\n        setParentHeight('auto');\n        setTextAreaHeight('auto');\n      } else {\n        setParentHeight(`${scrollHeight}px`);\n        setTextAreaHeight(`${scrollHeight}px`);\n      }\n    }\n  }, [textAreaRef, text]);\n\n  const onChangeHandler = (event: SyntheticInputEvent<EventTarget>) => {\n    if (textAreaRef.current != null) {\n      setParentHeight(`${textAreaRef.current.scrollHeight}px`);\n      setTextAreaHeight('auto');\n      onChange(event.target.value);\n    }\n  };\n\n  return (\n    <Parent\n      css={{\n        height: parentHeight,\n      }}\n    >\n      <TextArea\n        ref={textAreaRef}\n        placeholder={placeholder}\n        value={text}\n        rows={1}\n        style={{\n          height: textAreaHeight,\n        }}\n        onChange={onChangeHandler}\n        onKeyPress={onKeyPress}\n      />\n    </Parent>\n  );\n};\n\nexport default AutoTextArea;\n","export default __webpack_public_path__ + \"static/media/send.35a24809.svg\";","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport AutoTextArea from 'src/components/AutoTextArea';\nimport Separator from 'src/components/Separator';\nimport { addMessage } from 'src/reducers/actions';\nimport type {\n  MessageAction,\n  Message,\n  FullUser,\n  ReducerState,\n} from 'src/reducers/types';\nimport sendIcon from 'src/static/assets/send.svg';\nimport { tappable } from 'src/styles';\n\nconst Root = styled.div<{}>({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 20,\n});\n\nconst SendIcon = styled.img<{}>({\n  height: 24,\n  width: 24,\n  ...tappable,\n});\n\ntype Props = {|\n  user: FullUser,\n  dispatch: (message: Message, author: FullUser) => void,\n|};\n\nconst AddMessage = (props: Props) => {\n  const textAreaRef = React.useRef(null);\n  const [message, setMessage] = React.useState('');\n\n  function handleSendMessage() {\n    if (textAreaRef != null) {\n      textAreaRef.current?.focus();\n    }\n    const trimmedMessage = message.trim();\n    if (trimmedMessage !== '')\n      props.dispatch(message, { id: props.user.id, name: 'Me' });\n    setMessage('');\n  }\n\n  return (\n    <Root>\n      <AutoTextArea\n        textAreaRef={textAreaRef}\n        placeholder=\"Aa\"\n        text={message}\n        onChange={(text) => setMessage(text)}\n        onKeyPress={(e) => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            handleSendMessage();\n          }\n        }}\n      />\n      <Separator size={12} />\n      <SendIcon src={sendIcon} alt=\"Send\" onClick={handleSendMessage} />\n    </Root>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: (MessageAction) => void) => ({\n  dispatch: (message: Message, author: FullUser) => {\n    dispatch(addMessage(message, author));\n  },\n});\n\nconst AddMessageContainer = connect(\n  () => (state: ReducerState) => ({\n    user: state.user,\n  }),\n  mapDispatchToProps,\n)(AddMessage);\n\nexport default AddMessageContainer;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport Separator from 'src/components/Separator';\nimport type { ReducerState } from 'src/reducers/types';\nimport { breakpoints, colors } from 'src/styles';\n\nconst Root = styled.div<{}>({\n  display: 'flex',\n  flexDirection: 'column-reverse',\n  borderBottom: `1px solid ${colors.grayChateau}`,\n  padding: 20,\n  height: '100%',\n  overflow: 'auto',\n});\n\nconst MessageContainer = styled.div<{}>({\n  padding: 12,\n  borderRadius: 16,\n  width: 'fit-content',\n  maxWidth: 400,\n\n  [`@media (max-width: ${breakpoints.tablet + 1}px)`]: {\n    maxWidth: 300,\n  },\n});\n\nconst User = styled.div<{}>({\n  fontSize: 16,\n  fontWeight: 600,\n});\n\nconst Message = styled.div<{}>({\n  fontSize: 16,\n});\n\nconst MessagesList = ({ messages, user }) => {\n  return (\n    <Root>\n      <div>\n        {messages.map((message, idx) => {\n          const prevMessage = idx > 0 ? messages[idx - 1] : null;\n          const groupMessages = prevMessage?.author.id === message.author.id;\n          const isAuthor = message.author.id === user.id;\n          return (\n            <React.Fragment key={message.id}>\n              {idx !== 0 && <Separator size={groupMessages ? 4 : 16} />}\n              <div css={{ display: 'flex' }}>\n                {isAuthor && <Separator grow size={16} />}\n                <MessageContainer\n                  css={{\n                    backgroundColor: isAuthor\n                      ? colors.dodgerBlue\n                      : colors.athensGray,\n                    color: isAuthor ? colors.white : colors.cloudBurst,\n                  }}\n                >\n                  {!isAuthor && (\n                    <>\n                      <User>{message.author}</User>\n                      <Separator size={4} />\n                    </>\n                  )}\n                  <Message>{message.message}</Message>\n                </MessageContainer>\n              </div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </Root>\n  );\n};\n\nexport const MessagesListContainer = connect(\n  (state: ReducerState) => ({\n    messages: state.messages,\n    user: state.user,\n  }),\n  {},\n)(MessagesList);\n\nexport default MessagesListContainer;\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport Separator from 'src/components/Separator';\nimport type { FullUser, ReducerState, Users } from 'src/reducers/types';\nimport { colors } from 'src/styles';\n\nconst Root = styled.div<{}>({\n  padding: 24,\n  height: '100%',\n  width: 400,\n  borderRight: `1px solid ${colors.grayChateau}`,\n  flexShrink: 0,\n});\n\nconst UsersList = styled.div<{}>({\n  maxHeight: '100%',\n  overflow: 'auto',\n});\n\nconst Title = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 32,\n  fontWeight: 600,\n});\n\nconst User = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 24,\n});\n\ntype Props = {|\n  user: FullUser,\n  users: Users,\n|};\n\nconst Sidebar = ({ users, user }: Props) => {\n  return (\n    <Root>\n      <Title>Users ({users.length || 1})</Title>\n      <Separator size={32} />\n      <User>{user?.name ?? 'You'}</User>\n      {users.length > 1 && <Separator size={12} />}\n      <UsersList>\n        {users.map((u, idx) => (\n          <React.Fragment key={u.id}>\n            {user?.id !== u.id && (\n              <>\n                <User>{u.name}</User>\n                {idx !== users.length - 1 && <Separator size={12} />}\n              </>\n            )}\n          </React.Fragment>\n        ))}\n      </UsersList>\n    </Root>\n  );\n};\n\nexport const SidebarContainer = connect(\n  (state: ReducerState) => ({\n    user: state.user,\n    users: state.users,\n  }),\n  {},\n)(Sidebar);\n\nexport default SidebarContainer;\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport AddMessage from 'src/components/AddMessage';\nimport MessagesList from 'src/components/MessagesList';\n\nimport Sidebar from './components/Sidebar';\n\nconst Root = styled.div<{}>({\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nconst Messages = styled.div<{}>({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n  height: '100%',\n});\n\nfunction Desktop() {\n  return (\n    <Root>\n      <Sidebar />\n      <Messages>\n        <MessagesList />\n        <AddMessage />\n      </Messages>\n    </Root>\n  );\n}\n\nexport default Desktop;\n","export default __webpack_public_path__ + \"static/media/logo.cf7d5d26.svg\";","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport Separator from 'src/components/Separator';\nimport type { ReducerState, Users } from 'src/reducers/types';\nimport logo from 'src/static/assets/logo.svg';\nimport { colors } from 'src/styles';\n\nconst PADDING = 16;\nconst LOGO_SIZE = 32;\nconst BORDER_WIDTH = 1;\nexport const HEADER_HEIGHT = 2 * PADDING + LOGO_SIZE;\n\nconst Root = styled.div<{}>({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  borderBottom: `${BORDER_WIDTH}px solid ${colors.grayChateau}`,\n  padding: PADDING,\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  backgroundColor: colors.white,\n});\n\nconst Logo = styled.img<{}>({\n  height: LOGO_SIZE,\n  width: LOGO_SIZE,\n});\n\nconst Info = styled.div<{}>({\n  color: colors.shuttleGray,\n  fontSize: 14,\n});\n\ntype Props = {|\n  users: Users,\n|};\n\nconst Header = ({ users }: Props) => {\n  return (\n    <Root>\n      <Logo src={logo} alt=\"Logo\" />\n      <Separator grow size={8} />\n      <Info>Active users: {users.length}</Info>\n    </Root>\n  );\n};\n\nexport const HeaderContainer = connect(\n  (state: ReducerState) => ({\n    users: state.users,\n  }),\n  {},\n)(Header);\n\nexport default HeaderContainer;\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport AddMessage from 'src/components/AddMessage';\nimport MessagesList from 'src/components/MessagesList';\n\nimport Header, { HEADER_HEIGHT } from './Header';\n\nconst Messages = styled.div<{}>({\n  paddingTop: HEADER_HEIGHT,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nfunction TouchDevice() {\n  return (\n    <>\n      <Header />\n      <Messages>\n        <MessagesList />\n        <AddMessage />\n      </Messages>\n    </>\n  );\n}\n\nexport default TouchDevice;\n","// @flow\nimport React from 'react';\n\nimport ChooseName from 'src/components/ChooseName';\nimport Media from 'src/components/Media';\nimport { breakpoints } from 'src/styles';\nimport Desktop from 'src/views/Desktop';\nimport TouchDevice from 'src/views/TouchDevice';\n\nfunction App() {\n  return (\n    <>\n      <ChooseName />\n      <Media query={`(min-width: ${breakpoints.tablet + 1}px)`}>\n        {(isDesktopView) => (isDesktopView ? <Desktop /> : <TouchDevice />)}\n      </Media>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport WebFont from 'webfontloader';\n\nimport { store } from 'src/utils/sockets';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nWebFont.load({\n  google: {\n    families: ['Jost:400', 'Jost:500', 'Jost:600', 'sans-serif'],\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}