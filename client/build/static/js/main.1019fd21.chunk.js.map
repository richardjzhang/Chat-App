{"version":3,"sources":["reducers/constants.js","reducers/messages.js","reducers/user.js","reducers/users.js","reducers/index.js","reducers/actions.js","utils/sockets.js","styles.js","components/AddMessage.js","helpers/Portal.js","primitives/Overlay.js","components/Modal/Modal.js","components/Modal/ModalContent.js","primitives/Separator.js","components/Modal/ModalFooter.js","components/Modal/index.js","primitives/Button.js","utils/sagas.js","components/ChooseName.js","components/MessagesList.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_MESSAGE","MESSAGE_RECEIVED","ADD_USER","USERS_LIST","messages","state","action","type","types","message","author","id","user","users","chat","combineReducers","nextMessageId","setupSocket","dispatch","username","process","NODE_ENV","WEBSOCKET_DEV_PORT","HOST","location","origin","replace","socket","WebSocket","onopen","send","JSON","stringify","name","onmessage","event","data","parse","String","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","colors","Root","styled","div","padding","height","Input","textarea","width","outline","resize","backgroundColor","border","borderRadius","AddMessageContainer","connect","addMessage","props","React","useState","setMessage","placeholder","value","onChange","e","target","onKeyPress","trimmedMessage","trim","key","preventDefault","portalWithScrollPreventionClass","removeAllClasses","node","Array","from","classList","forEach","c","remove","setClassList","classValues","add","InnerPortal","portalNode","document","body","this","rootScrollingElement","getElementById","isOpen","addPortalNode","prevProps","removePortalNode","updatePortalNode","createElement","appendChild","setState","preventScrollClass","portalClass","removeChild","onClose","querySelectorAll","length","children","ReactDOM","createPortal","Component","styles","position","zIndex","overflow","Portal","hasScrollPrevention","css","exitAnimationDuration","overlay","top","right","bottom","left","animationName","keyframes","animationDuration","animationFillMode","animationTimingFunction","overlayExit","Overlay","animateClose","onClick","root","createRef","ref","Boolean","current","isScrollingDown","startY","curY","isScrollingUp","boxEnterKeyframes","boxExitKeyframes","box","animation","willChange","boxShadow","margin","WebkitTapHighlightColor","boxExit","scrollingContainer","overflowY","boxSizing","WebkitOverflowScrolling","display","alignItems","Modal","handleCloseButtonClick","handleOverlayClick","closeOnOverlayTap","handleKeyDown","stopPropagation","keyCode","handleTouchStart","touches","clientY","handleTouchMove","scrollHeight","clientHeight","scrollTop","scrollToTop","scrollableElement","scrollTo","behavior","focus","onTouchStart","onTouchMove","tabIndex","onKeyDown","maxWidth","defaultProps","flexDirection","ModalContent","isCentered","textAlign","Separator","flexShrink","size","grow","flexGrow","ModalFooter","Fragment","justifyContent","minWidth","ModalPortal","modal","openModal","closeModal","window","setTimeout","onExitAnimationEnd","ButtonStyle","button","color","fontSize","fontWeight","cursor","userSelect","WebkitTouchCallout","textDecoration","webkitAppearance","mozAppearance","Button","handleNewMessage","params","takeEvery","Title","Subtitle","input","ChooseName","setIsOpen","setUsername","run","borderBottom","MessageContainer","User","Message","MessagesListContainer","map","idx","prevMessage","groupMessages","isAuthor","borderRight","UsersList","maxHeight","SidebarContainer","u","Messages","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","render"],"mappings":"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","file":"static/js/main.1019fd21.chunk.js","sourcesContent":["// @flow\nconst ADD_MESSAGE = 'ADD_MESSAGE';\nconst MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\nconst ADD_USER = 'ADD_USER';\nconst USERS_LIST = 'USERS_LIST';\n\nexport { ADD_MESSAGE, MESSAGE_RECEIVED, ADD_USER, USERS_LIST };\n","// @flow\nimport * as types from './constants';\nimport type { MessageAction, MessageData } from './types';\n\nconst messages = (state: Array<MessageData> = [], action: MessageAction) => {\n  switch (action.type) {\n    case types.ADD_MESSAGE:\n    case types.MESSAGE_RECEIVED:\n      return [\n        ...state,\n        { message: action.message, author: action.author, id: action.id },\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default messages;\n","// @flow\nimport * as types from './constants';\nimport type { UserAction, FullUser } from './types';\n\nconst user = (state: ?FullUser = null, action: UserAction) => {\n  switch (action.type) {\n    case types.ADD_USER:\n      return action.user;\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","// @flow\nimport * as types from './constants';\nimport type { UserListAction, Users } from './types';\n\nconst users = (state: Users = [], action: UserListAction) => {\n  switch (action.type) {\n    case types.USERS_LIST:\n      return action.users;\n    default:\n      return state;\n  }\n};\n\nexport default users;\n","// @flow\nimport { combineReducers } from 'redux';\n\nimport messages from './messages';\nimport user from './user';\nimport users from './users';\n\nconst chat = combineReducers({\n  messages,\n  users,\n  user,\n});\n\nexport default chat;\n","// @flow\nimport * as types from './constants';\nimport type {\n  MessageAction,\n  Message,\n  FullUser,\n  UserAction,\n  UserListAction,\n  User,\n  Users,\n} from './types';\n\nlet nextMessageId = 0;\n\nexport const addMessage = (\n  message: Message,\n  author: FullUser,\n): MessageAction => ({\n  type: types.ADD_MESSAGE,\n  id: nextMessageId++,\n  message,\n  author,\n});\n\nexport const messageReceived = (\n  message: Message,\n  author: FullUser,\n): MessageAction => ({\n  type: types.MESSAGE_RECEIVED,\n  id: nextMessageId++,\n  message,\n  author,\n});\n\nexport const populateUsersList = (users: Users): UserListAction => ({\n  type: types.USERS_LIST,\n  users,\n});\n\nexport const addUser = (user: User): UserAction => ({\n  type: types.ADD_USER,\n  user,\n});\n","// @flow\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from 'src/reducers';\nimport {\n  addUser,\n  messageReceived,\n  populateUsersList,\n} from 'src/reducers/actions';\nimport * as types from 'src/reducers/constants';\nimport type {\n  MessageAction,\n  UserAction,\n  UserListAction,\n  UserName,\n} from 'src/reducers/types';\n\nconst setupSocket = (\n  dispatch: (MessageAction | UserListAction | UserAction) => void,\n  username: UserName,\n) => {\n  const { NODE_ENV = 'production', WEBSOCKET_DEV_PORT = 8989 } = process.env;\n  const HOST = location.origin.replace(/^http/, 'ws');\n\n  // If in development mode, hook up to local websocket running on separate server.\n  // Otherwise, use current port\n  const socket = new WebSocket(\n    NODE_ENV === 'production' ? HOST : `ws://localhost:${WEBSOCKET_DEV_PORT}`,\n  );\n\n  socket.onopen = () => {\n    socket.send(\n      JSON.stringify({\n        type: types.ADD_USER,\n        name: username,\n      }),\n    );\n  };\n\n  socket.onmessage = (event: MessageEvent) => {\n    const data = JSON.parse(String(event.data));\n    switch (data.type) {\n      case types.ADD_MESSAGE:\n        dispatch(messageReceived(data.message, data.author));\n        break;\n      case types.USERS_LIST:\n        dispatch(populateUsersList(data.users));\n        break;\n      case types.ADD_USER:\n        dispatch(addUser(data.user));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return socket;\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\nexport { sagaMiddleware, setupSocket, store };\n","// @flow\nexport const colors = {\n  // Primary Colors\n  dodgerBlue: '#3B80FE',\n  cloudBurst: '#21374D',\n  honorNight: '#0C2426',\n\n  // Palette\n  sail: '#B7D8F9',\n  iceCold: '#B7F9D8',\n  dairyCream: '#F9D8B7',\n  cupid: '#F9B7D8',\n\n  // Greys\n  athensGray: '#E7E7EF',\n  grayChateau: '#A2AAB3',\n\n  // Other\n  white: '#FFF',\n  black: '#000000',\n};\n\n// It doesn't fix all the possible issues on all browsers or devices, feel free to add rules\nexport const tappable = {\n  cursor: 'pointer',\n  userSelect: 'none', // to prevent the text selection (e.g. selecting text triggers the copy-paste popup menu on iOS and Android)\n  WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)', // to prevent the default tap highlight colour being applied\n  WebkitTouchCallout: 'none', // to prevent the context menu from showing, at least on iOS for anchor elements\n};\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addMessage } from 'src/reducers/actions';\nimport type {\n  MessageAction,\n  Message,\n  FullUser,\n  ReducerState,\n} from 'src/reducers/types';\nimport { colors } from 'src/styles';\n\nconst Root = styled.div<{}>({\n  padding: 20,\n  height: 200,\n});\n\nconst Input = styled.textarea<{}>({\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  padding: 8,\n  resize: 'none',\n  backgroundColor: colors.athensGray,\n  border: 'none',\n  borderRadius: 8,\n});\n\ntype Props = {|\n  user: FullUser,\n  dispatch: (message: Message, author: FullUser) => void,\n|};\n\nconst AddMessage = (props: Props) => {\n  const [message, setMessage] = React.useState('');\n  return (\n    <Root>\n      <Input\n        placeholder=\"Aa\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyPress={(e) => {\n          const trimmedMessage = message.trim();\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            if (trimmedMessage !== '')\n              props.dispatch(message, { id: props.user.id, name: 'Me' });\n            setMessage('');\n          }\n        }}\n      />\n    </Root>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: (MessageAction) => void) => ({\n  dispatch: (message: Message, author: FullUser) => {\n    dispatch(addMessage(message, author));\n  },\n});\n\nconst AddMessageContainer = connect(\n  () => (state: ReducerState) => ({\n    user: state.user,\n  }),\n  mapDispatchToProps,\n)(AddMessage);\n\nexport default AddMessageContainer;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { ClassNames } from '@emotion/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\ntype ClassName = string;\n\n// Some of the components that use Portal require scroll prevention\n// when open (Modal, Flyout, MainMenu). It is also possible for a few of them\n// to be open at the same time (e.g. Modal inside Flyout or nested Modals).\n// Therefore we should be careful not to remove scroll prevention until\n// all of the components that require scroll prevent unmount - we keep track\n// of these by adding `portalWithScrollPreventionClass` to their corresponding\n// nodes and checking if any of them is present in the DOM.\n// TODO: a better solution is needed for handling the scroll prevention logic,\n// possibly the one that:\n// * isolates the scroll prevention logic from InnerPortal\n// * is represented by a single boolean in the app state\n// * avoids using DOM for checks\nconst portalWithScrollPreventionClass = 'portal-with-scroll-prevention-f2e1bc';\n\nconst removeAllClasses = (node: HTMLElement) => {\n  // IE11 doesn't support the variadic version of .remove() so we have to\n  // manually call it once for each class in the list.\n  Array.from(node.classList).forEach((c) => {\n    node.classList.remove(c);\n  });\n};\n\n// Sets the classes on node to be exactly equal to the provided class values.\n// This makes it easy for us to have our class list be a pure function of the\n// passed classes, which is important for interacting nicely with React.\nconst setClassList = (node: HTMLElement, ...classValues: Array<ClassName>) => {\n  removeAllClasses(node);\n  // IE11 doesn't support the variadic version of .add() so we have to\n  // manually call it once for each class in the list.\n  classValues.forEach((c) => {\n    node.classList.add(c);\n  });\n};\n\ntype Props = {\n  isOpen: boolean,\n  onClose?: () => void,\n  children?: React$Node,\n  portalClass: ClassName,\n  preventScrollClass: ?ClassName,\n};\n\ntype State = {\n  portalNode: ?HTMLDivElement,\n};\n\nclass InnerPortal extends React.Component<Props, State> {\n  rootScrollingElement: ?HTMLElement;\n\n  state = {\n    portalNode: null,\n  };\n\n  componentDidMount() {\n    if (document.body == null) return; // flow refinement\n    this.rootScrollingElement = document.getElementById('root');\n\n    if (this.props.isOpen) {\n      this.addPortalNode();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!prevProps.isOpen && this.props.isOpen) this.addPortalNode();\n    else if (prevProps.isOpen && !this.props.isOpen) this.removePortalNode();\n    else this.updatePortalNode();\n  }\n\n  componentWillUnmount() {\n    // TODO check whether we will try to remove the DOM node before React has\n    // been able to clean up its shit due to the render diff. It sounds like\n    // we may need to cleanup on a subsequent tick.\n    if (this.props.isOpen && this.state.portalNode != null) {\n      this.removePortalNode();\n    }\n  }\n\n  addPortalNode() {\n    const portalNode = document.createElement('div');\n    if (document.body != null) document.body.appendChild(portalNode);\n    this.setState({ portalNode });\n    this.updatePortalNode();\n  }\n\n  updatePortalNode() {\n    if (this.state.portalNode == null) return;\n    setClassList(\n      this.state.portalNode,\n      ...(this.props.preventScrollClass != null\n        ? [portalWithScrollPreventionClass]\n        : []),\n      this.props.portalClass,\n    );\n    if (this.props.preventScrollClass != null) {\n      this.rootScrollingElement?.classList.add(this.props.preventScrollClass);\n    }\n  }\n\n  removePortalNode() {\n    if (document.body != null && this.state.portalNode != null)\n      document.body.removeChild(this.state.portalNode);\n    this.setState({ portalNode: null }, () => {\n      if (this.props.onClose != null) this.props.onClose();\n    });\n    if (\n      this.props.preventScrollClass != null &&\n      document.querySelectorAll(`.${portalWithScrollPreventionClass}`)\n        .length === 0\n    ) {\n      this.rootScrollingElement?.classList.remove(\n        this.props.preventScrollClass,\n      );\n    }\n  }\n\n  render() {\n    return this.props.isOpen &&\n      this.state.portalNode &&\n      this.props.children != null\n      ? ReactDOM.createPortal(this.props.children, this.state.portalNode)\n      : null;\n  }\n}\n\nconst styles = {\n  portal: {\n    position: 'absolute',\n    zIndex: 2147483647, // Necessary to beat Intercom widget.\n  },\n  preventScroll: {\n    overflow: 'hidden',\n  },\n};\n\nexport default function Portal({\n  hasScrollPrevention = false,\n  isOpen,\n  children,\n}: {\n  hasScrollPrevention?: boolean,\n  isOpen: boolean,\n  children: React$Node,\n}) {\n  return (\n    <ClassNames>\n      {({ css }) => (\n        <InnerPortal\n          isOpen={isOpen}\n          portalClass={css(styles.portal)}\n          preventScrollClass={\n            hasScrollPrevention ? css(styles.preventScroll) : null\n          }\n        >\n          {children}\n        </InnerPortal>\n      )}\n    </ClassNames>\n  );\n}\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { keyframes } from '@emotion/react';\nimport React, { createRef } from 'react';\n\nimport { type ReactRefType } from 'src/utils/flow';\n\ntype Props = {\n  animateClose?: boolean,\n  children?: React$Node,\n  onClick?: () => void,\n};\n\nexport const exitAnimationDuration = 300; // milliseconds\n\nconst overlayEnterKeyframes = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst overlayExitKeyframes = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`;\n\nconst styles = {\n  overlay: {\n    height: '100vh',\n    position: 'fixed',\n    zIndex: 1,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    animationName: overlayEnterKeyframes,\n    animationDuration: '300ms',\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n  },\n  overlayExit: {\n    animationName: overlayExitKeyframes,\n    animationDuration: `${exitAnimationDuration}ms`,\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n  },\n};\n\nconst Overlay = ({ animateClose, children, onClick }: Props) => {\n  // ref to node\n  const root: ReactRefType<HTMLDivElement> = createRef();\n  return (\n    <div\n      ref={root}\n      css={[styles.overlay, Boolean(animateClose) && styles.overlayExit]}\n      onClick={(event) => {\n        if (event.target === root.current && onClick) onClick();\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Overlay;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport { keyframes } from '@emotion/react';\nimport React, { createRef, Component } from 'react';\n\nimport type { DefaultProps, Props } from 'src/components/Modal';\nimport Overlay, { exitAnimationDuration } from 'src/primitives/Overlay';\nimport { colors } from 'src/styles';\nimport { type ReactRefType } from 'src/utils/flow';\n\nexport { exitAnimationDuration };\n\nconst isScrollingDown = (startY, curY) => curY < startY;\nconst isScrollingUp = (startY, curY) => !isScrollingDown(startY, curY);\n\nconst MODAL_MAX_WIDTH = 600;\nconst MODAL_BORDER_RADIUS = 16;\n\nconst boxEnterKeyframes = keyframes`\n  0% {\n    opacity: 0;\n    transform: scale(1);\n  }\n\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nconst boxExitKeyframes = keyframes`\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  100% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n`;\n\nconst styles = {\n  box: {\n    // https://codepen.io/amonks/pen/GjjdoA\n    // to fix Safari it is also necessary to unset `will-change` rule\n    ':-webkit-full-screen-ancestor': {\n      animation: 'none',\n      animationFillMode: 'none',\n      willChange: 'unset',\n    },\n    backgroundColor: colors.white,\n    borderRadius: MODAL_BORDER_RADIUS,\n    boxShadow: '0 0 24px rgba(0, 0, 0, 0.18)',\n    margin: 'auto',\n    animationName: boxEnterKeyframes,\n    animationDuration: '300ms',\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n    padding: 40,\n    overflow: 'hidden',\n    // Promote to own compositor layer. Allows boxShadow to extend outside its\n    // parent clipping rect. Without this the boxShadow will appear clipped\n    // during the rubber-band scroll effect in iOS Safari.\n    willChange: 'transform',\n    WebkitTapHighlightColor: 'rgba(0,0,0,0)',\n  },\n  boxExit: {\n    animationName: boxExitKeyframes,\n    animationDuration: `${exitAnimationDuration}ms`,\n    animationFillMode: 'forwards',\n    animationTimingFunction: 'ease-out',\n  },\n  scrollingContainer: {\n    overflowY: 'auto',\n    padding: 32,\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box',\n    WebkitOverflowScrolling: 'touch', // momentum scrolling for iOS Safari\n    display: 'flex',\n    alignItems: 'flex-start',\n    ':focus': {\n      outline: 'none',\n    },\n  },\n};\n\nclass Modal extends Component<Props, void> {\n  static defaultProps: DefaultProps;\n\n  handleCloseButtonClick: () => void;\n  handleOverlayClick: () => void;\n  handleKeyDown: (event: KeyboardEvent) => void;\n  handleTouchStartOnScrollingContainer: () => void;\n  handleTouchStart: (event: SyntheticTouchEvent<>) => void;\n  handleTouchMove: (event: SyntheticTouchEvent<>) => void;\n\n  startY: ?number;\n\n  componentDidMount() {\n    if (this.scrollingContainer.current != null) {\n      this.scrollingContainer.current.focus();\n    }\n  }\n\n  scrollingContainer: ReactRefType<HTMLDivElement> = createRef();\n\n  handleCloseButtonClick = () => {\n    this.props.onClose();\n  };\n\n  handleOverlayClick = () => {\n    if (this.props.closeOnOverlayTap) {\n      this.props.onClose();\n    }\n  };\n\n  handleKeyDown = (event: KeyboardEvent) => {\n    // Try to make sure the keydown events are not propagated to elements up on the tree when a modal is open, because we should treat the modal as an indipendent layer of the application and keydown events should not interact with the underlying content.\n    // This is achieved giving programmatically focus to the scrolling container in cDM\n    // If other elements steal focus this intent would fail, but it's the safest approach we could keep at the moment\n    event.stopPropagation();\n    if (event.keyCode === 27) {\n      // Esc\n      event.preventDefault();\n      this.props.onClose();\n    }\n  };\n\n  handleTouchStart = (event: SyntheticTouchEvent<>) => {\n    this.startY = event.touches[0].clientY;\n  };\n\n  handleTouchMove = (event: SyntheticTouchEvent<>) => {\n    if (this.scrollingContainer.current == null) return;\n\n    const curY = event.touches[0].clientY;\n\n    // Disable scroll propagation when container isn't scrollable\n    if (\n      this.scrollingContainer.current.scrollHeight ===\n      this.scrollingContainer.current.clientHeight\n    ) {\n      event.preventDefault();\n      return;\n    }\n\n    // Disable scroll propagation when we are scrolled to the top of the container\n    // and we are trying to scroll up further.\n    if (\n      this.scrollingContainer.current.scrollTop === 0 &&\n      isScrollingUp(this.startY, curY)\n    ) {\n      event.preventDefault();\n      return;\n    }\n\n    // FlowIssue — This second check is only required because Flow is\n    // pessimistic about side effects.\n    if (this.scrollingContainer.current == null) return;\n\n    // Disable scroll propagation when we are scrolled to the bottom of the container\n    // and we are trying to scroll down further.\n    if (\n      this.scrollingContainer.current.scrollTop +\n        this.scrollingContainer.current.clientHeight >=\n        this.scrollingContainer.current.scrollHeight &&\n      isScrollingDown(this.startY, curY)\n    ) {\n      event.preventDefault();\n      return;\n    }\n  };\n\n  scrollToTop = () => {\n    const scrollableElement = this.scrollingContainer.current;\n    if (scrollableElement != null) {\n      // $FlowIssue flow is unaware of the scrollTo method on elements\n      scrollableElement.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  render() {\n    return (\n      <Overlay animateClose={this.props.animateClose}>\n        <div\n          css={styles.scrollingContainer}\n          ref={this.scrollingContainer}\n          onClick={this.handleOverlayClick}\n          onTouchStart={this.handleTouchStart}\n          onTouchMove={this.handleTouchMove}\n          tabIndex=\"0\"\n          onKeyDown={this.handleKeyDown}\n        >\n          <div\n            id=\"modal\"\n            css={[\n              styles.box,\n              Boolean(this.props.animateClose) && styles.boxExit,\n              {\n                width: this.props.width || MODAL_MAX_WIDTH,\n                maxWidth: this.props.width || MODAL_MAX_WIDTH,\n              },\n            ]}\n            onClick={(event) => event.stopPropagation()}\n          >\n            {this.props.children}\n          </div>\n        </div>\n      </Overlay>\n    );\n  }\n}\n\nModal.defaultProps = {\n  closeOnOverlayTap: false,\n};\n\nexport default Modal;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nconst Root = styled.div<{}>({\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nexport default function ModalContent({\n  children,\n  isCentered,\n}: {|\n  children: React$Node,\n  isCentered?: boolean,\n|}) {\n  return (\n    <Root css={isCentered ? { alignItems: 'center', textAlign: 'center' } : {}}>\n      {children}\n    </Root>\n  );\n}\n","// @flow\nimport styled from '@emotion/styled';\n\nconst Separator = styled.div<{ grow?: boolean, size: number }>((props) => ({\n  flexShrink: 0,\n  height: props.size,\n  width: props.size,\n  ...(props.grow ? { flexGrow: 1 } : {}),\n}));\n\nexport default Separator;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport React from 'react';\n\nimport Separator from 'src/primitives/Separator';\n\nexport function ModalFooter({\n  children,\n  isCentered = false,\n}: {|\n  children: React$Node,\n  isCentered?: boolean,\n|}) {\n  return (\n    <React.Fragment>\n      <Separator size={40} />\n      <div\n        css={{\n          display: 'flex',\n          justifyContent: isCentered ? 'center' : 'flex-start',\n\n          '> a, > button': {\n            minWidth: 164,\n          },\n        }}\n      >\n        {children}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ModalFooter;\n","// @flow\nimport React, { createRef, Component } from 'react';\nimport type { Node } from 'react';\n\nimport Portal from 'src/helpers/Portal';\nimport { type ReactRefType } from 'src/utils/flow';\n\nimport Modal, { exitAnimationDuration } from './Modal';\n\nexport type Props = {\n  isOpen: boolean,\n  title?: string,\n  onClose: Function,\n  animateClose?: boolean,\n  width?: number,\n  closeOnOverlayTap: boolean, // Close modal if user taps/clicks the overlay?\n  children: Node,\n  onExitAnimationEnd?: () => void,\n};\n\nexport type DefaultProps = {\n  closeOnOverlayTap: boolean,\n};\n\ntype State = {\n  animateClose: boolean,\n  isOpen: boolean,\n};\n\nclass ModalPortal extends Component<Props, State> {\n  static defaultProps: DefaultProps;\n\n  openModal: () => void;\n  closeModal: () => void;\n  reenablePageScroll: () => void;\n\n  state = {\n    isOpen: false,\n    animateClose: false,\n  };\n\n  componentDidMount() {\n    if (this.props.isOpen) {\n      this.openModal();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.isOpen && !prevProps.isOpen) this.openModal();\n    else if (!this.props.isOpen && prevProps.isOpen) this.closeModal();\n  }\n\n  modal: ReactRefType<Modal> = createRef();\n\n  scrollToTop = () => {\n    const modal = this.modal.current;\n    if (modal != null) {\n      modal.scrollToTop();\n    }\n  };\n\n  openModal = () => {\n    this.setState((state) => ({ ...state, isOpen: true }));\n  };\n\n  closeModal = () => {\n    this.setState((state) => ({ ...state, animateClose: true }));\n    window.setTimeout(() => {\n      this.setState((state) => ({\n        ...state,\n        animateClose: false,\n        isOpen: false,\n      }));\n\n      if (this.props.onExitAnimationEnd) this.props.onExitAnimationEnd();\n    }, exitAnimationDuration);\n  };\n\n  render() {\n    return (\n      <Portal isOpen={this.state.isOpen} hasScrollPrevention>\n        <Modal\n          {...this.props}\n          animateClose={this.state.animateClose}\n          ref={this.modal}\n        />\n      </Portal>\n    );\n  }\n}\nModalPortal.defaultProps = {\n  closeOnOverlayTap: true,\n};\n\nexport default ModalPortal;\nexport { default as ModalContent } from './ModalContent';\nexport { default as ModalFooter } from './ModalFooter';\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { colors, tappable } from 'src/styles';\n\nconst ButtonStyle = styled.button<{}>({\n  alignItems: 'center',\n  backgroundColor: colors.dodgerBlue,\n  border: 'none',\n  borderRadius: 8,\n  color: colors.white,\n  display: 'flex',\n  flexShrink: 0,\n  fontSize: 16,\n  fontWeight: 600,\n  justifyContent: 'center',\n  margin: 0,\n  outline: 'none',\n  padding: 16,\n  ...tappable,\n  textDecoration: 'none',\n  webkitAppearance: 'none',\n  mozAppearance: 'none',\n});\n\ntype Props = {|\n  children: React$Node,\n  onClick: () => void,\n|};\n\nconst Button = ({ children, onClick }: Props) => {\n  return <ButtonStyle onClick={onClick}>{children}</ButtonStyle>;\n};\n\nexport default Button;\n","// @flow\nimport { takeEvery } from 'redux-saga/effects';\n\nimport * as types from 'src/reducers/constants';\nimport type { UserName } from 'src/reducers/types';\n\nconst handleNewMessage = function* handleNewMessage(params: {\n  socket: typeof WebSocket,\n  username: UserName,\n}): any {\n  yield takeEvery(types.ADD_MESSAGE, (action) => {\n    action.author = params.username;\n    // $FlowFixMe the flow-typed library doesn't know about the methods of sockets\n    params.socket.send(JSON.stringify(action));\n  });\n};\n\nexport default handleNewMessage;\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport Modal, { ModalContent, ModalFooter } from 'src/components/Modal';\nimport Button from 'src/primitives/Button';\nimport Separator from 'src/primitives/Separator';\nimport { colors } from 'src/styles';\nimport handleNewMessage from 'src/utils/sagas';\nimport { sagaMiddleware, setupSocket, store } from 'src/utils/sockets';\n\nconst Title = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 32,\n  fontWeight: 600,\n});\n\nconst Subtitle = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 20,\n});\n\nconst Input = styled.input<{}>({\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  padding: 12,\n  backgroundColor: colors.athensGray,\n  border: 'none',\n  borderRadius: 8,\n  textAlign: 'center',\n});\n\nconst ChooseName = () => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const [username, setUsername] = React.useState('');\n\n  const handleSubmit = () => {\n    if (username !== '') {\n      setIsOpen(false);\n      const socket = setupSocket(store.dispatch, username);\n      sagaMiddleware.run(handleNewMessage, { socket, username });\n    }\n  };\n\n  return (\n    // The only way to close this modal is to submit a name\n    <Modal isOpen={isOpen} onClose={() => {}} closeOnOverlayTap={false}>\n      <ModalContent isCentered>\n        <Title>Welcome!</Title>\n        <Separator size={24} />\n        <Subtitle>What&apos;s your name?</Subtitle>\n        <Separator size={20} />\n        <Input\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Enter your name here\"\n        />\n      </ModalContent>\n      <ModalFooter isCentered>\n        <Button onClick={handleSubmit}>Submit</Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default ChooseName;\n","// @flow\n/** @jsxImportSource @emotion/react */\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport Separator from 'src/primitives/Separator';\nimport type { ReducerState } from 'src/reducers/types';\nimport { colors } from 'src/styles';\n\nconst Root = styled.div<{}>({\n  borderBottom: `1px solid ${colors.grayChateau}`,\n  padding: 20,\n  height: '100%',\n  overflow: 'auto',\n});\n\nconst MessageContainer = styled.div<{}>({\n  padding: 12,\n  borderRadius: 16,\n  width: 'fit-content',\n  maxWidth: 400,\n});\n\nconst User = styled.div<{}>({\n  fontSize: 16,\n  fontWeight: 600,\n});\n\nconst Message = styled.div<{}>({\n  fontSize: 16,\n});\n\nconst MessagesList = ({ messages, user }) => {\n  return (\n    <Root>\n      {messages.map((message, idx) => {\n        const prevMessage = idx > 0 ? messages[idx - 1] : null;\n        const groupMessages = prevMessage?.author.id === message.author.id;\n        const isAuthor = message.author.id === user.id;\n        return (\n          <React.Fragment key={message.id}>\n            {idx !== 0 && <Separator size={groupMessages ? 4 : 16} />}\n            <div css={{ display: 'flex' }}>\n              {isAuthor && <Separator grow size={16} />}\n              <MessageContainer\n                css={{\n                  backgroundColor: isAuthor\n                    ? colors.dodgerBlue\n                    : colors.athensGray,\n                  color: isAuthor ? colors.white : colors.cloudBurst,\n                }}\n              >\n                {!isAuthor && (\n                  <>\n                    <User>{message.author}</User>\n                    <Separator size={4} />\n                  </>\n                )}\n                <Message>{message.message}</Message>\n              </MessageContainer>\n            </div>\n          </React.Fragment>\n        );\n      })}\n    </Root>\n  );\n};\n\nexport const MessagesListContainer = connect(\n  (state: ReducerState) => ({\n    messages: state.messages,\n    user: state.user,\n  }),\n  {},\n)(MessagesList);\n\nexport default MessagesListContainer;\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport Separator from 'src/primitives/Separator';\nimport type { FullUser, ReducerState, Users } from 'src/reducers/types';\nimport { colors } from 'src/styles';\n\nconst Root = styled.div<{}>({\n  padding: 24,\n  height: '100%',\n  width: 400,\n  borderRight: `1px solid ${colors.grayChateau}`,\n  flexShrink: 0,\n});\n\nconst UsersList = styled.div<{}>({\n  maxHeight: '100%',\n  overflow: 'auto',\n});\n\nconst Title = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 32,\n  fontWeight: 600,\n});\n\nconst User = styled.div<{}>({\n  color: colors.cloudBurst,\n  fontSize: 24,\n});\n\ntype Props = {|\n  user: FullUser,\n  users: Users,\n|};\n\nconst Sidebar = ({ users, user }: Props) => {\n  return (\n    <Root>\n      <Title>Users ({users.length || 1})</Title>\n      <Separator size={32} />\n      <User>{user?.name ?? 'You'}</User>\n      {users.length > 1 && <Separator size={12} />}\n      <UsersList>\n        {users.map((u, idx) => (\n          <React.Fragment key={u.id}>\n            {user?.id !== u.id && (\n              <>\n                <User>{u.name}</User>\n                {idx !== users.length - 1 && <Separator size={12} />}\n              </>\n            )}\n          </React.Fragment>\n        ))}\n      </UsersList>\n    </Root>\n  );\n};\n\nexport const SidebarContainer = connect(\n  (state: ReducerState) => ({\n    user: state.user,\n    users: state.users,\n  }),\n  {},\n)(Sidebar);\n\nexport default SidebarContainer;\n","// @flow\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport AddMessage from 'src/components/AddMessage';\nimport ChooseName from 'src/components/ChooseName';\nimport MessagesList from 'src/components/MessagesList';\nimport Sidebar from 'src/components/Sidebar';\n\nconst Root = styled.div<{}>({\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nconst Messages = styled.div<{}>({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n  height: '100%',\n});\n\nfunction App() {\n  return (\n    <Root>\n      <ChooseName />\n      <Sidebar />\n      <Messages>\n        <MessagesList />\n        <AddMessage />\n      </Messages>\n    </Root>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport WebFont from 'webfontloader';\n\nimport { store } from 'src/utils/sockets';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nWebFont.load({\n  google: {\n    families: ['Jost:400', 'Jost:500', 'Jost:600', 'sans-serif'],\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}